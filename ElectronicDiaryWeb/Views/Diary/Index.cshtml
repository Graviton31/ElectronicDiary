@using System.Globalization
@using ElectronicDiaryApi.ModelsDto.Diary
@model DiaryWeekViewModel
@{
    ViewData["Title"] = "Электронный дневник";
    var isParent = User.IsInRole("родитель");
    var daysWithLessons = Model.Days?
        .Where(d => d.Lessons.Any())
        .OrderBy(d => d.Date)
        .ToList() ?? new List<DiaryDayDto>();
}

<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">

<div class="page-container">
    <!-- Заголовок страницы -->
    <div class="page-header">
        <div class="d-flex align-items-center">
            <div class="icon-wrapper me-3">
                <i class="bi bi-journal-bookmark-fill header-icon"></i>
            </div>
            <div>
                <h1 class="page-title">@ViewData["Title"]</h1>
                <p class="page-subtitle">Просмотр посещаемости</p>
            </div>
        </div>
        <div class="header-divider"></div>
    </div>

    <div class="card animate__animated animate__fadeIn">
        <div class="card-body p-3 p-md-4">
            <!-- Управление и навигация -->
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center gap-3 mb-4">
                <!-- Выбор ребенка для родителя -->
                @if (isParent && Model.AvailableChildren?.Count > 0)
                {
                    <div class="child-selector flex-grow-1 me-md-3">
                        <label for="childSelect" class="form-label small mb-1">Выберите ребенка:</label>
                        <select id="childSelect" class="form-select form-select-sm">
                            @foreach (var child in Model.AvailableChildren)
                            {
                                <option value="@child.Id" selected="@(child.Id == Model.SelectedChildId)">
                                    @child.FullName
                                </option>
                            }
                        </select>
                    </div>
                }

                <!-- Навигация по неделям -->
                <div class="d-flex flex-column flex-md-row align-items-center gap-2">
                    <div class="d-flex align-items-center gap-2">
                        <a href="@Url.Action("Index", new { date = Model.PreviousWeekStart.ToDateTime(TimeOnly.MinValue), studentId = isParent ? Model.SelectedChildId : null })"
                           class="btn btn-sm btn-outline-primary"
                           title="Предыдущая неделя">
                            <i class="bi bi-chevron-left"></i>
                        </a>
                        <div class="bg-white px-3 py-1 rounded text-center fw-medium">
                            @Model.WeekStartDate.ToString("dd.MM.yyyy") - @Model.WeekEndDate.ToString("dd.MM.yyyy")
                        </div>
                        <a href="@Url.Action("Index", new { date = Model.NextWeekStart.ToDateTime(TimeOnly.MinValue), studentId = isParent ? Model.SelectedChildId : null })"
                           class="btn btn-sm btn-outline-primary"
                           title="Следующая неделя">
                            <i class="bi bi-chevron-right"></i>
                        </a>
                    </div>
                    <a href="@Url.Action("Index", new { date = DateTime.Today, studentId = isParent ? Model.SelectedChildId : null })"
                       class="btn btn-sm btn-primary"
                       title="Текущая неделя">
                        Сегодня
                    </a>
                </div>
            </div>

            <!-- Список занятий -->
            @if (daysWithLessons.Count == 0)
            {
                <div class="empty-state">
                    <i class="bi bi-journal-x empty-icon"></i>
                    <h5 class="empty-title">Нет занятий на этой неделе</h5>
                    <p class="empty-text">На выбранную неделю не запланировано занятий</p>
                </div>
            }
            else
            {
                <div class="lessons-list">
                    @foreach (var day in daysWithLessons)
                    {
                        <div class="day-header mb-2 mt-3">
                            <h6 class="mb-0 fw-bold">
                                @CultureInfo.CurrentCulture.TextInfo.ToTitleCase(day.Date.ToString("dddd", new CultureInfo("ru-RU")))
                                <span class="text-muted ms-2">@day.Date.ToString("dd.MM.yyyy")</span>
                            </h6>
                        </div>
                        
                        @foreach (var lesson in day.Lessons.OrderBy(l => l.StartTime))
                        {
                            <div class="lesson-item @GetStatusClass(lesson.VisitStatus) mb-2 p-3 rounded">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="d-flex flex-column flex-md-row align-items-md-center gap-2">
                                        <div class="lesson-time text-nowrap">
                                            @lesson.StartTime.ToString("HH\\:mm")-@lesson.EndTime.ToString("HH\\:mm")
                                        </div>
                                        <div class="vr d-none d-md-flex"></div>
                                        <div class="lesson-subject fw-medium">
                                            @lesson.SubjectName
                                        </div>
                                        <div class="vr d-none d-md-flex"></div>
                                        <div class="lesson-group small text-muted">
                                            @lesson.GroupName
                                        </div>
                                    </div>
                                    <div class="d-flex align-items-center gap-2">
                                        <span class="badge @GetStatusBadgeClass(lesson.VisitStatus)">
                                            @GetStatusDisplay(lesson.VisitStatus)
                                        </span>
                                        @if (isParent && !string.IsNullOrEmpty(lesson.Comment))
                                        {
                                            <button class="btn btn-sm btn-link p-0 comment-btn has-comment"
                                                    data-comment="@lesson.Comment"
                                                    title="Показать комментарий преподавателя">
                                                <i class="bi bi-chat-square-text-fill"></i>
                                            </button>
                                        }
                                    </div>
                                </div>
                                @if (!string.IsNullOrEmpty(string.Join(", ", lesson.Teachers)))
                                {
                                    <div class="lesson-teachers small text-muted mt-1">
                                        Преподаватель: @string.Join(", ", lesson.Teachers)
                                    </div>
                                }
                            </div>
                        }
                    }
                </div>
            }
        </div>
    </div>
</div>

<!-- Модальное окно комментария -->
<div class="modal fade" id="commentModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title"><i class="bi bi-chat-square-text me-2"></i>Комментарий преподавателя</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="comment-content" id="commentContent"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusClass(string status)
    {
        return status switch
        {
            "н" => "bg-danger bg-opacity-10",
            "б" => "bg-warning bg-opacity-10",
            "у/п" => "bg-info bg-opacity-10",
            _ => ""
        };
    }

    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "н" => "bg-danger",
            "б" => "bg-warning text-dark",
            "у/п" => "bg-info text-dark",
            "к" => "bg-secondary",
            _ => "bg-success"
        };
    }

    string GetStatusDisplay(string status)
    {
        return status switch
        {
            "н" => "Не был",
            "б" => "Болел",
            "у/п" => "Ув. причина",
            "к" => "Опоздал",
            _ => "Присут."
        };
    }
}

@section Scripts {
    <script>
        $(document).ready(function() {
            @if (isParent && Model.AvailableChildren?.Count > 0)
            {
                <text>
                $('#childSelect').change(function() {
                    const childId = $(this).val();
                    const currentDate = new Date('@Model.WeekStartDate.ToString("yyyy-MM-dd")');
                    window.location.href = `@Url.Action("Index")?date=${currentDate.toISOString().split('T')[0]}&studentId=${childId}`;
                });
                </text>
            }

            $(document).on('click', '.comment-btn', function() {
                const comment = $(this).data('comment');
                $('#commentContent').html(comment);
                $('#commentModal').modal('show');

                // Добавляем анимацию при открытии
                $('#commentContent').addClass('comment-highlight');
                setTimeout(() => {
                    $('#commentContent').removeClass('comment-highlight');
                }, 2000);
            });
        });
    </script>
}